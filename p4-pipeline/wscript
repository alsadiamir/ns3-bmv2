# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def configure(conf):
     conf.env['ENABLE_bmall']=conf.check(mandatory=True,
                                         libpath=['/usr/local/lib/'],
                                         includes=['/usr/local/include/'],
                                         lib='bmall', uselib_store='LIB_BMALL')
     conf.env['ENABLE_boost']=conf.check(mandatory=True,
                                         libpath=['/usr/lib/x86_64-linux-gnu/'],
                                         lib='boost_system', uselib_store='LIB_BOOST')

def build(bld):
    module = bld.create_ns3_module('p4-pipeline', ['core', 'network'])
    module.source = [
        'model/p4-pipeline.cc',
        'helper/p4-pipeline-helper.cc',
        ]

    module_test = bld.create_ns3_module_test_library('p4-pipeline')
    module_test.source = [
        'test/p4-pipeline-test-suite.cc',
        ]
    module.use.append('LIB_BMALL')
    module.use.append('LIB_BOOST')

    headers = bld(features='ns3header')
    headers.module = 'p4-pipeline'
    headers.source = [
        'model/p4-pipeline.h',
        'helper/p4-pipeline-helper.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()

